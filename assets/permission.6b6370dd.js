var l=Object.defineProperty;var g=(i,e,t)=>e in i?l(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var u=(i,e,t)=>(g(i,typeof e!="symbol"?e+"":e,t),t);const a=class{static getCurrentLocation(){return new Promise(e=>{navigator.geolocation.getCurrentPosition(function(t){console.log("position"),console.log(t),e({lat:t.coords.latitude,lng:t.coords.longitude})},function(t){console.error(t),e()},{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})})}static toRad(e){return e*Math.PI/180}static calculateDistanceBetweenCoordinates(e,t){const o=a.toRad(t.lat-e.lat),s=a.toRad(t.lng-e.lng),c=Math.sin(o/2)**2+Math.cos(a.toRad(e.lat))*Math.cos(a.toRad(t.lat))*Math.sin(s/2)**2;return 6371*(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)))}static nearbyLocation(e,t,n=a.NEARBY_DISTANCE_IN_KM){return a.calculateDistanceBetweenCoordinates(e,t)<=n}};let r=a;u(r,"NEARBY_DISTANCE_IN_KM",1.5);class h{static requestCamera(){return new Promise((e,t)=>{navigator.mediaDevices.getUserMedia({video:!0}).then(()=>{e(!0)}).catch(n=>{console.error(n),e(!1)})})}static requestDeviceOrientation(){return new Promise((e,t)=>{typeof DeviceOrientationEvent<"u"&&typeof DeviceOrientationEvent.requestPermission=="function"?DeviceOrientationEvent.requestPermission().then(n=>{e(n=="granted")}).catch(n=>{console.error(n),e(!1)}):e(!1)})}static requestLocationState(){return new Promise((e,t)=>{navigator.permissions&&navigator.permissions.query?navigator.permissions.query({name:"geolocation"}).then(n=>e(n.state)):e(void 0)})}static requestLocation(){return new Promise((e,t)=>{navigator.permissions&&navigator.permissions.query?navigator.permissions.query({name:"geolocation"}).then(function(n){const o=n.state;console.log("permission"),console.log(o),o==="granted"?e(!0):o==="prompt"?r.getCurrentLocation().then(s=>(console.log("location"),console.log(s),e(s!==void 0))).catch(s=>console.log(s)):e(!1)}):navigator.geolocation?r.getCurrentLocation().then(n=>e(n!==void 0)):e(!1)})}}export{r as L,h as P};
